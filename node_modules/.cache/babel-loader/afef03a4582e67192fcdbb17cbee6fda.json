{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\ethirium-price-index\\\\ether\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from './components/Header';\nimport _ from 'lodash';\nimport { Line, Chart } from 'react-chartjs-2';\nimport moment from 'moment';\nimport currencies from './support-currencies.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    Chart.defaults.global.defaultFontColor = '#000';\n    Chart.defaults.global.defaultFontSize = 16;\n    this.state = {\n      historicalData: null,\n      currency: \"PHP\",\n      baseUrl: 'https://api.coindesk.com/'\n    };\n    this.onCurrencySelect = this.onCurrencySelect.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBitcoinData();\n  }\n\n  getBitcoinData() {\n    const {\n      baseUrl,\n      currency\n    } = this.state;\n    fetch(`${baseUrl}v1/bpi/historical/close.json?currency=${currency}`).then(response => response.json()).then(historicalData => this.setState({\n      historicalData\n    })).catch(e => e);\n  }\n\n  formatChartData() {\n    const {\n      bpi\n    } = this.state.historicalData;\n    return {\n      labels: _.map(_.keys(bpi), date => moment(date).format(\"ll\")),\n      datasets: [{\n        label: \"Bitcoin\",\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: _.values(bpi)\n      }]\n    };\n  }\n\n  setCurrency(currency) {\n    this.setState({\n      currency\n    }, this.getBitcoinData);\n  }\n\n  onCurrencySelect(e) {\n    this.setCurrency(e.target.value);\n  }\n\n  render() {\n    if (this.state.historicalData) {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Header, {\n        title: \"BITCOIN PRICE INDEX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"select-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: 18,\n          fontFamily: 'Bungee'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" Select your currency: \"), React.createElement(\"select\", {\n        value: this.state.currency,\n        onChange: this.onCurrencySelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, currencies.map((obj, index) => React.createElement(\"option\", {\n        key: `${index}-${obj.country}`,\n        value: obj.currency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" \", obj.country, \" \"))), this.state.currency !== 'PHP' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"link\",\n        onClick: () => this.setCurrency('PHP'),\n        style: {\n          color: \"black\",\n          fontSize: 16,\n          fontFamily: 'Bungee'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \" [CLICK HERE TO RESET] \"))), React.createElement(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.formatChartData(),\n        height: 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })));\n    }\n\n    return null;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/acer/Desktop/ethirium-price-index/ether/src/App.js"],"names":["React","Component","Header","_","Line","Chart","moment","currencies","App","constructor","props","defaults","global","defaultFontColor","defaultFontSize","state","historicalData","currency","baseUrl","onCurrencySelect","bind","componentDidMount","getBitcoinData","fetch","then","response","json","setState","catch","e","formatChartData","bpi","labels","map","keys","date","format","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","values","setCurrency","target","value","render","fontSize","fontFamily","obj","index","country","color","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport _ from 'lodash';\nimport { Line, Chart } from 'react-chartjs-2';\nimport moment from 'moment';\nimport currencies from './support-currencies.json'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    Chart.defaults.global.defaultFontColor = '#000';\n    Chart.defaults.global.defaultFontSize = 16;\n\n    this.state = {\n      historicalData: null, \n      currency: \"PHP\",\n      baseUrl: 'https://api.coindesk.com/'\n    }\n    this.onCurrencySelect = this.onCurrencySelect.bind(this)\n  }\n\n  componentDidMount () {\n    this.getBitcoinData()\n  }\n  getBitcoinData () {\n\n    const {baseUrl, currency} = this.state\n\n    fetch(`${baseUrl}v1/bpi/historical/close.json?currency=${currency}`)\n      .then(response => response.json())\n      .then(historicalData => this.setState({historicalData}))\n      .catch(e => e)\n  }\n  formatChartData () {\n    const {bpi} = this.state.historicalData\n\n    return {\n      labels: _.map(_.keys(bpi), date => moment(date).format(\"ll\")),\n      datasets: [\n        {\n          label: \"Bitcoin\",\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: _.values(bpi)\n        }\n      ]\n    }\n  }\n  setCurrency (currency) {\n    this.setState({currency}, this.getBitcoinData)\n  }\n\n  onCurrencySelect (e) {\n    this.setCurrency(e.target.value)\n  }\n\n  render() {\n    if (this.state.historicalData) {\n      return (\n        <div className=\"app\">\n          <Header title=\"BITCOIN PRICE INDEX\" />\n\n          <div className=\"select-container\">\n            <span style={{fontSize: 18, fontFamily: 'Bungee'}}> Select your currency: </span>\n            <select value={this.state.currency} onChange={this.onCurrencySelect}>\n              {currencies.map((obj, index) =>\n                <option key={`${index}-${obj.country}`} value={obj.currency}> {obj.country} </option>\n              )}\n            </select>\n            {\n              this.state.currency !== 'PHP' && (<div>\n                <a href=\"#\" className=\"link\" onClick={() => this.setCurrency('PHP')} style={{color: \"black\", fontSize: 16, fontFamily: 'Bungee'}}> [CLICK HERE TO RESET] </a>\n              </div>)\n            }\n          </div>\n\n          <div style={{marginTop: 10}}>\n            <Line data={this.formatChartData()} height={250} />\n          </div>\n        </div>\n      )\n    }\n\n    return null\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}